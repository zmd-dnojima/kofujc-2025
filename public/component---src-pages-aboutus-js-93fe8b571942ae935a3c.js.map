{"version":3,"file":"component---src-pages-aboutus-js-93fe8b571942ae935a3c.js","mappings":"+MA6BA,MAAMA,EAAc,IAAIC,IAClBC,EAAU,IAAIC,QACpB,IACIC,EADAC,EAAS,EA2Bb,SAASC,EAAYC,GACnB,OAAOC,OAAOC,KAAKF,GAASG,OAAOC,QAAOC,QAAwBC,IAAjBN,EAAQK,KAAoBE,KAAIF,IAC/E,MAAO,GAAGA,KAAe,SAARA,GAdFG,EAc6BR,EAAQQ,KAbjDA,GACDb,EAAQc,IAAID,KAChBV,GAAU,EACVH,EAAQe,IAAIF,EAAMV,EAAOa,aAFKhB,EAAQiB,IAAIJ,IADxB,KAa4CR,EAAQK,KAdxE,IAAmBG,CAc2D,IACzEG,UACL,CA4CA,SAASE,EAAQC,EAASC,EAAUf,EAAU,CAAC,EAAGgB,EAAiBnB,GACjE,QAA2C,IAAhCoB,OAAOC,2BAA2DZ,IAAnBU,EAA8B,CACtF,MAAMG,EAASL,EAAQM,wBAUvB,OATAL,EAASC,EAAgB,CACvBK,eAAgBL,EAChBM,OAAQR,EACRS,kBAAgD,iBAAtBvB,EAAQwB,UAAyBxB,EAAQwB,UAAY,EAC/EC,KAAM,EACNC,mBAAoBP,EACpBQ,iBAAkBR,EAClBS,WAAYT,IAEP,MAGT,CAEA,MAAM,GACJU,EAAE,SACFC,EAAQ,SACRC,GA/DJ,SAAwB/B,GAEtB,IAAI6B,EAAK9B,EAAYC,GACjBgC,EAAWvC,EAAYmB,IAAIiB,GAC/B,IAAKG,EAAU,CAEb,MAAMD,EAAW,IAAIrC,IACrB,IAAIuC,EACJ,MAAMH,EAAW,IAAIZ,sBAAqBgB,IACxCA,EAAQC,SAAQC,IACd,IAAIC,EAGJ,MAAMC,EAASF,EAAMf,gBAAkBY,EAAWM,MAAKf,GAAaY,EAAMb,mBAAqBC,IAE3FxB,EAAQwC,sBAA8C,IAApBJ,EAAMK,YAG1CL,EAAMK,UAAYH,GAE4B,OAA/CD,EAAgBN,EAASnB,IAAIwB,EAAMd,UAA4Be,EAAcF,SAAQpB,IACpFA,EAASuB,EAAQF,EAAM,GACvB,GACF,GACDpC,GAEHiC,EAAaH,EAASG,aAAeS,MAAMC,QAAQ3C,EAAQwB,WAAaxB,EAAQwB,UAAY,CAACxB,EAAQwB,WAAa,IAClHQ,EAAW,CACTH,KACAC,WACAC,YAEFtC,EAAYiB,IAAImB,EAAIG,EACtB,CACA,OAAOA,CACT,CA6BMY,CAAe5C,GAEnB,IAAI6C,EAAYd,EAASnB,IAAIE,IAAY,GAMzC,OALKiB,EAAStB,IAAIK,IAChBiB,EAASrB,IAAII,EAAS+B,GAExBA,EAAUC,KAAK/B,GACfe,EAASjB,QAAQC,GACV,WAEL+B,EAAUE,OAAOF,EAAUG,QAAQjC,GAAW,GACrB,IAArB8B,EAAUI,SAEZlB,EAASmB,OAAOpC,GAChBgB,EAASqB,UAAUrC,IAEC,IAAlBiB,EAASqB,OAEXtB,EAASuB,aACT5D,EAAYyD,OAAOrB,GAEvB,CACF,CAuDqB,YCxLrB,MAhBiByB,IAAiB,IAAhB,SAACC,GAASD,EACxB,MAAOE,EAAKlB,GDyUhB,UAAmB,UACjBd,EAAS,MACTiC,EAAK,gBACLjB,EAAe,WACfkB,EAAU,KACVlD,EAAI,YACJmD,EAAW,KACXC,EAAI,cACJC,EAAa,eACb7C,EAAc,SACd8C,GACE,CAAC,GACH,IAAIC,EACJ,MAAOP,EAAKQ,GAAU,WAAe,MAC/BjD,EAAW,YACVkD,EAAOC,GAAY,WAAe,CACvC5B,SAAUuB,EACVzB,WAAO9B,IAITS,EAASoD,QAAUL,EACnB,aAAgB,KAEd,GAAIF,IAASJ,EAAK,OAClB,IAAIL,EAqBJ,OApBAA,EAAYtC,EAAQ2C,GAAK,CAAClB,EAAQF,KAChC8B,EAAS,CACP5B,SACAF,UAEErB,EAASoD,SAASpD,EAASoD,QAAQ7B,EAAQF,GAC3CA,EAAMf,gBAAkBsC,GAAeR,IAEzCA,IACAA,OAAY7C,EACd,GACC,CACDE,OACAkD,aACAlC,YAEAgB,kBAEAiB,SACCzC,GACI,KACDmC,GACFA,GACF,CACD,GAIH,CAGAT,MAAMC,QAAQnB,GAAaA,EAAUb,WAAaa,EAAWgC,EAAKhD,EAAMkD,EAAYC,EAAaC,EAAMpB,EAAiBxB,EAAgByC,IACxI,MAAMW,EAA8C,OAA/BL,EAAeE,EAAM7B,YAAiB,EAAS2B,EAAazC,OAC3E+C,EAAsB,WACvBb,IAAOY,GAAgBT,GAAgBC,GAAQS,EAAoBF,UAAYC,IAGlFC,EAAoBF,QAAUC,EAC9BF,EAAS,CACP5B,SAAUuB,EACVzB,WAAO9B,KAGX,MAAMgE,EAAS,CAACN,EAAQC,EAAM3B,OAAQ2B,EAAM7B,OAK5C,OAHAkC,EAAOd,IAAMc,EAAO,GACpBA,EAAOhC,OAASgC,EAAO,GACvBA,EAAOlC,MAAQkC,EAAO,GACfA,CACT,CCpZ0BC,CAAU,CAC5BZ,aAAa,IAGjB,OACIa,EAAAA,cAAA,OAAKhB,IAAOA,GACPlB,EACGkC,EAAAA,cAAA,WAAK,IAAEjB,GAEPiB,EAAAA,cAAA,YAEF,E,wCC0Ed,MA7DiBC,GAGTD,EAAAA,cAACE,EAAAA,EAAM,KACHF,EAAAA,cAACG,EAAAA,EAAG,CAACC,MAAM,OAAOC,YAAY,gBAC9BL,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,MAEZP,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IACZP,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IAAe,SAGnCP,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IAEZP,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IACZP,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,SAAG,2CAAwCA,EAAAA,cAAA,WAAK,6NAChDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IAAgB,iBAGpCP,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IACZP,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,OAASP,EAAAA,cAAA,WAAK,cAClDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,SAAWP,EAAAA,cAAA,WAAK,sBACpDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,QAAUP,EAAAA,cAAA,WAAK,gBACnDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,SAAWP,EAAAA,cAAA,WAAK,gBACpDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,MAAQP,EAAAA,cAAA,WAAK,mBACjDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,OAASP,EAAAA,cAAA,WAAK,UAClDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,QAAUP,EAAAA,cAAA,WAAK,wCACnDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,QAAUP,EAAAA,cAAA,WAAK,cACnDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,YAAcP,EAAAA,cAAA,WAAK,WAAQA,EAAAA,cAAA,WAAK,WAAQA,EAAAA,cAAA,WAAK,SAAMA,EAAAA,cAAA,WAAK,gBAGhGA,EAAAA,cAAA,UAAI,MACJA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,IACZP,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,aAAeP,EAAAA,cAAA,WAAK,sBACxDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,YAAcP,EAAAA,cAAA,WAAK,mBACvDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,YAAcP,EAAAA,cAAA,WAAK,mBACvDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,YAAcP,EAAAA,cAAA,WAAK,qBACvDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,YAAcP,EAAAA,cAAA,WAAK,uBACvDA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,cAAoB,aAAeP,EAAAA,cAAA,WAAK,gBAG5DA,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,OAAKM,UAAWC,EAAAA,GAAYlD,GAAI,UAC5B2C,EAAAA,cAACQ,EAAQ,KAACR,EAAAA,cAAA,UAAQS,IAAI,qQAAqQH,UAAWC,EAAAA,GAAiBG,gBAAgB,GAAGC,QAAQ,OAAOC,eAAe,kCAOhXZ,EAAAA,cAACa,EAAAA,EAAW,O,gmBChFrB,IACIC,EAAa,gCAEbC,EAAW,8BACXC,EAAW,8BAIXC,EAAM,yBAENC,EAAgB,mCAEhBC,EAAe,kCAQfC,EAAO,0BACPC,EAAY,+BACZC,EAAmB,sCACnBC,EAAY,+BACZC,EAAU,6BAEVC,EAAS,4BAUTC,EAAU,6BAGVC,EAAU,6BAEVC,EAAW,8BACXC,EAAW,8BAGXC,EAAa,gCAGbC,EAAa,gCAEbC,EAAW,8BACXC,EAAW,8BAGXC,EAAQ,2BACR9B,EAAQ,2BACR+B,EAAY,+BACZC,EAAU,4B","sources":["webpack://yanagawa-yoshi/./node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","webpack://yanagawa-yoshi/./src/components/embedmap.js","webpack://yanagawa-yoshi/./src/pages/aboutus.js","webpack://yanagawa-yoshi/./src/styles/sub.module.scss"],"sourcesContent":["import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold);\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options);\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n    const _this$props = this.props,\n      {\n        children,\n        as\n      } = _this$props,\n      props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _state$entry;\n  const [ref, setRef] = React.useState(null);\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView,\n    entry: undefined\n  });\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n  React.useEffect(() => {\n    // Ensure we have node ref, and that we shouldn't skip observing\n    if (skip || !ref) return;\n    let unobserve;\n    unobserve = observe(ref, (inView, entry) => {\n      setState({\n        inView,\n        entry\n      });\n      if (callback.current) callback.current(inView, entry);\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        // If it should only trigger once, unobserve the element after it's inView\n        unobserve();\n        unobserve = undefined;\n      }\n    }, {\n      root,\n      rootMargin,\n      threshold,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n    return () => {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  },\n  // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [\n  // If the threshold is an array, convert it to a string, so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  const entryTarget = (_state$entry = state.entry) == null ? void 0 : _state$entry.target;\n  const previousEntryTarget = React.useRef();\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n","import React from \"react\"\nimport { useInView } from 'react-intersection-observer'\nimport * as style from \"../styles/sub.module.scss\"\n\nconst EmbedMap = ({children}) => {\n    const [ref, inView] = useInView({\n        triggerOnce: true,\n    });\n\n    return (\n        <div ref = {ref}>\n            {inView ? ( \n                <div> {children}</div>            \n            ) : (\n                <div></div>\n            )}\n        </div>\n    )\n}\n\nexport default EmbedMap","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\" \nimport { useEffect, useRef, useState } from \"react\"\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\n\nimport { motion, useAnimate, useMotionValueEvent, useScroll, useInView } from \"framer-motion\"\n//import * as Scroll from 'react-scroll'\n\nimport SwiperCore, { Autoplay, EffectFade, Navigation, Pagination, Keyboard, FreeMode, EffectCards, Thumbs } from 'swiper'\nimport { Swiper, SwiperSlide, useSwiper } from 'swiper/react'\nimport 'swiper/css/bundle'\nimport \"swiper/swiper.min.css\"\nimport \"swiper/css/navigation\"\nimport \"swiper/css/pagination\"\nimport \"swiper/css/free-mode\"\n\n//fontswesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\"\n\n//google map\nimport EmbedMap from \"../components/embedmap\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport * as style from \"../styles/sub.module.scss\"  \nimport ContactArea from \"../components/contactArea\"\n\nconst Feature = (props) => {\n\n    return (\n        <Layout>\n            <Seo title=\"会社案内\" description=\"柳川芳鉄工所｜会社案内\" />\n            <div className={style.main}>\n\n                <div className={style.subtitle}>\n                    <h1>ABOUT US</h1>\n                    <div className={style.txtArea}>会社案内</div>\n                </div>\n\n                <div className={style.subContent}>\n\n                    <div className={style.mission}>\n                        <h2>代表メッセージ</h2>\n                        <p>この度は株式会社柳川芳鉄工所のホームページにお越しいただきありがとうございます。<br/>我が社は昭和21年甲府市に柳川芳鉄工所として開業いたしました。以来ボイラー及び圧力容器の製造及び据付工事を行ってまいりました。長年培ってきました経験と技術により沢山の取引先よりご愛顧いただいております。ますます機械化が進む現代、機械だけではできない人の手に頼らなければならない物づくりこだわり、これからもより良い製品を製造するために社員一丸なお一層精進し、お客様のニーズに柔軟に対応し、信頼される会社作りに努めてまいりたいと思います。</p>\n                        <div className={style.rightTxt}>代表取締役社長 柳川芳彦</div>\n                    </div>\n\n                    <h2>会社概要</h2>\n                    <div className={style.outline}>\n                        <div className={style.materialName}>会社名</div><div>株式会社柳川芳鉄工所</div>\n                        <div className={style.materialName}>本社所在地</div><div>山梨県中巨摩郡昭和町築地新居1683</div>\n                        <div className={style.materialName}>電話番号</div><div>055-275-5141</div>\n                        <div className={style.materialName}>FAX番号</div><div>055-275-5143</div>\n                        <div className={style.materialName}>創業</div><div>昭和21年(1946年)10月</div>\n                        <div className={style.materialName}>資本金</div><div>1000万円</div>\n                        <div className={style.materialName}>事業内容</div><div>圧力容器・配管・架台・その他鉄鋼製品諸々の製作及び据付工事・検査・補修等</div>\n                        <div className={style.materialName}>取引銀行</div><div>山梨中央銀行昭和支店</div>\n                        <div className={style.materialName}>仕入先（順不同）</div><div>阪和工材株式会社<br/>三浦工業株式会社<br/>株式会社北海<br/>アイテック株式会社　他</div>\n                    </div>\n\n                    <h2>沿革</h2>\n                    <div className={style.outline}>\n                        <div className={style.materialName}>昭和21年 10月</div><div>甲府市相生町に「柳川芳鉄工所」を設立</div>\n                        <div className={style.materialName}>昭和34年　8月</div><div>労働省ボイラー製造許可を受ける</div>\n                        <div className={style.materialName}>昭和35年　1月</div><div>労働省圧力容器製造許可を受ける</div>\n                        <div className={style.materialName}>昭和35年　2月</div><div>「株式会社 柳川丸芳鉄工所」に改組</div>\n                        <div className={style.materialName}>昭和43年　4月</div><div>名称を「株式会社 柳川芳鉄工所」に改称</div>\n                        <div className={style.materialName}>昭和55年 11月</div><div>現在地に本社工場を移設</div>\n                    </div>\n\n                    <h2>アクセス</h2>\n                    <div className={style.gmap} id={\"access\"}>\n                        <EmbedMap><iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d12971.970567987655!2d138.5186057!3d35.6279079!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x601bf6df5f096f9d%3A0xdf6342c1b8234fb!2z77yI5qCq77yJ5p-z5bed6Iqz6YmE5bel5omA!5e0!3m2!1sja!2sjp!4v1710222709157!5m2!1sja!2sjp\" className={style.gmapInner} allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe></EmbedMap>\n                    </div>\n\n                </div>\n                \n\n               \n                <ContactArea/>\n\n            </div>\n\n\n        </Layout>\n    )\n}\n\nexport default Feature\n\n","// extracted by mini-css-extract-plugin\nexport var active = \"sub-module--active--e29ed\";\nexport var backButton = \"sub-module--backButton--fda1a\";\nexport var bg = \"sub-module--bg--38f0b\";\nexport var blogArea = \"sub-module--blogArea--d4482\";\nexport var blogCard = \"sub-module--blogCard--afef6\";\nexport var brpc = \"sub-module--brpc--04c2c\";\nexport var brsp = \"sub-module--brsp--bb4a4\";\nexport var btnbox = \"sub-module--btnbox--be804\";\nexport var cap = \"sub-module--cap--91e23\";\nexport var contactArea = \"sub-module--contactArea--951f7\";\nexport var contactButton = \"sub-module--contactButton--48775\";\nexport var container = \"sub-module--container--75cda\";\nexport var contentInner = \"sub-module--contentInner--2aa40\";\nexport var copyright = \"sub-module--copyright--524bf\";\nexport var ctaBtn = \"sub-module--ctaBtn--5c627\";\nexport var envelop = \"sub-module--envelop--83ddd\";\nexport var fadeIn = \"sub-module--fadeIn--35540\";\nexport var footerInner = \"sub-module--footerInner--e9ec3\";\nexport var footerWrapper = \"sub-module--footerWrapper--3c357\";\nexport var gatsbyImageWrapper = \"sub-module--gatsby-image-wrapper--792e8\";\nexport var gmap = \"sub-module--gmap--d825b\";\nexport var gmapInner = \"sub-module--gmapInner--dce48\";\nexport var grid_1clm_altimg = \"sub-module--grid_1clm_altimg--5bd7d\";\nexport var grid_2clm = \"sub-module--grid_2clm--41ff8\";\nexport var gridbox = \"sub-module--gridbox--2991c\";\nexport var headerWrapper = \"sub-module--headerWrapper--3b82c\";\nexport var imgbox = \"sub-module--imgbox--41fe7\";\nexport var inactive = \"sub-module--inactive--ad63a\";\nexport var loaderArea = \"sub-module--loaderArea--0d415\";\nexport var loaderInner = \"sub-module--loaderInner--22072\";\nexport var loaderWrap = \"sub-module--loaderWrap--99112\";\nexport var logo = \"sub-module--logo--cba3c\";\nexport var menuBtn = \"sub-module--menuBtn--4e45d\";\nexport var menuInner = \"sub-module--menuInner--61267\";\nexport var menuShow = \"sub-module--menuShow--cd655\";\nexport var menuWrapper = \"sub-module--menuWrapper--d2f79\";\nexport var mission = \"sub-module--mission--56c29\";\nexport var morebutton = \"sub-module--morebutton--41416\";\nexport var off = \"sub-module--off--ddd01\";\nexport var outline = \"sub-module--outline--2ef6e\";\nexport var pc = \"sub-module--pc--2d07a\";\nexport var required = \"sub-module--required--12905\";\nexport var rightTxt = \"sub-module--rightTxt--5aa26\";\nexport var scrollBtn = \"sub-module--scrollBtn--c1ced\";\nexport var selected = \"sub-module--selected--8d681\";\nexport var singlePage = \"sub-module--singlePage--f5c4b\";\nexport var snsArea = \"sub-module--snsArea--17c4a\";\nexport var sp = \"sub-module--sp--2b939\";\nexport var subContent = \"sub-module--subContent--dd46e\";\nexport var subMenu = \"sub-module--subMenu--b8ad6\";\nexport var subTitle = \"sub-module--subTitle--2abd3\";\nexport var subtitle = \"sub-module--subtitle--7c293\";\nexport var telNumber = \"sub-module--telNumber--a0f5f\";\nexport var telbox = \"sub-module--telbox--56c5e\";\nexport var tenpu = \"sub-module--tenpu--865ca\";\nexport var title = \"sub-module--title--30dfd\";\nexport var topButton = \"sub-module--topButton--bfe14\";\nexport var txtArea = \"sub-module--txtArea--90d95\";"],"names":["observerMap","Map","RootIds","WeakMap","unsupportedValue","rootId","optionsToId","options","Object","keys","sort","filter","key","undefined","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","_ref","children","ref","delay","rootMargin","triggerOnce","skip","initialInView","onChange","_state$entry","setRef","state","setState","current","entryTarget","previousEntryTarget","result","useInView","React","props","Layout","Seo","title","description","className","style","EmbedMap","src","allowfullscreen","loading","referrerpolicy","ContactArea","backButton","blogArea","blogCard","cap","contactButton","contentInner","gmap","gmapInner","grid_1clm_altimg","grid_2clm","gridbox","imgbox","mission","outline","required","rightTxt","singlePage","subContent","subTitle","subtitle","tenpu","topButton","txtArea"],"sourceRoot":""}